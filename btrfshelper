#!/bin/bash
set -e

while :; do
    echo
    echo '1. create btrfs parition'
    echo '2. mount btrfs parition'
    echo '0. cancel'
    echo
    printf 'Choice: '
    read r
    case $r in
    1)
        while :; do
            echo
            lsblk
            echo
            printf 'the required data partition filename: '
            read DEVICE_FILE
            if [ -b "$DEVICE_FILE" ]; then
                break
            else
                echo 'Invalid device name!'
                sleep 1
            fi
        done
        echo
        printf 'Encrypt it by luks? (Y/n) '
        read r
        if [[ "$r" =~ ^(Y|y|)$ ]]; then
            cryptsetup close cryptlvm &>/dev/null || :
            echo
            cryptsetup luksFormat -q "$DEVICE_FILE"
            echo
            printf "Again "
            cryptsetup open "$DEVICE_FILE" cryptlvm
            echo
            DEVICE_FILE=/dev/mapper/cryptlvm
        fi
        mkfs.btrfs "$DEVICE_FILE" &>/dev/null
        mkdir -p /mnt/btrfs
        mount "$DEVICE_FILE" /mnt/btrfs
        btrfs subvol create /mnt/btrfs/@
        btrfs subvol create /mnt/btrfs/@home
        btrfs subvol create /mnt/btrfs/@var
        umount /mnt/btrfs
        rmdir /mnt/btrfs
        ;;
    2)
        while :; do
            echo
            lsblk
            echo
            printf 'btrfs block device filename: '
            read DEVICE_FILE
            if [ -b "$DEVICE_FILE" ]; then
                break
            else
                echo 'Invalid filename!'
                sleep 1
            fi
        done
        ;;
    0) ;;
    *)
        echo 'Invalid choice!'
        sleep 1
        continue
        ;;
    esac
    break
done

mountbtrfs() {
    mkdir -p /mnt/archinstall/$1
    mount -o relatime,compress=zstd:1,space_cache=v2,subvol=@$1 "$DEVICE_FILE" /mnt/archinstall/$1
}

mountbtrfs
mountbtrfs home
mountbtrfs var

echo
echo 'mount | grep /mnt/archinstall :'
mount | grep /mnt/archinstall
